<head>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Raleway&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://www.icloud.com/iclouddrive/0c3r4UAaKrL283TIcYX-DzX5g#stylesheet">
  <style>
    .add-subject-btn {
      background: none;
      border: none;
      cursor: pointer;
      color: #007bff;
      font-size: 20px;
      display: flex;
      align-items: center;
    }

    .remove-subject-btn {
      background: none;
      border: none;
      cursor: pointer;
      color: #dc3545;
      font-size: 20px;
      display: flex;
      align-items: center;
    }
    .popup-overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.5);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 9999;
    }
    .popup-content {
      background-color: #fff;
      padding: 20px;
      border-radius: 5px;
      max-width: 300px;
    }
    .popup-content input[type="password"] {
      width: 100%;
      padding: 10px;
      margin-bottom: 10px;
    }
    .popup-content button {
      padding: 10px 20px;
      background-color: #4CAF50;
      color: #fff;
      border: none;
      cursor: pointer;
    }
  </style>
      <style>
        
        body{
          background-image: url("https://marketplace.canva.com/EAFKazjWmMg/1/0/1600w/canva-minimalist-abstract-desktop-wallpaper-8vx5pcfhbAM.jpg");
          background-size: cover;
          background-repeat: no-repeat;
          font-family: Raleway, sans-serif;
          font-weight: 400;
          color: #ffffff;
          margin: 0;
          padding: 0; /* Center text horizontally */
          display: flex;
          align-items: center;
          justify-content: center;
          display: flex;
          flex-direction: column;
          column-gap: 10px;
          gap: 5px;}
        h1{
            
        font-family: Raleway, sans-serif;
        font-size: 70px;
        font-weight: 500;
        width: 50vw;
        height: 20vh;
        padding: 10px;
          background-color: rgb(218, 247, 166);
          text-align: center; /* Center text horizontally */
          display: flex; /* Add flexbox */
          justify-content: center; /* Center text vertically */
          align-items: center;
          border-radius: 10px;
        }
        
        h2{
            font-size: small;
        }
        
        p{
            font-size: smaller;
            font-weight: 200;
        }
        
        li{
        
            font-size: medium;
            width: 50vw;
          height: 30vh;
          padding: 10px;
          background-color: rgb(218, 247, 166);
          border-radius: 10px;
        }
        
        ul{
            font-size: small;
        
        }
        
        button{
            font-family: Raleway, sans-serif;
            font-size: 25px;
            font-weight: 400;
            padding: 5px;
            background-color: rgb(255, 195, 0);
            width: 25vw;
          height: 7vh;
          text-align: center; /* Center text horizontally */
          display: flex; /* Add flexbox */
          justify-content: center;
          border-radius: 10px;
        
        }
        
        div{
            font-size: 25px;
            width: 40vw;
          height: 10vh;
          padding: 10px;
          background-color: rgba(144, 12, 63);
          text-align: center; /* Center text horizontally */
          display: flex; /* Add flexbox */
          border-radius: 10px;
          gap: 10px;
          
        }
        
        a {
            font-family: Raleway, sans-serif;
            font-size: 25px;
            text-decoration: none;
            font-weight: 400;
            text-align: center;
          }
        
          form{
            font-size: 25px;
            border-radius: 10px;
            width: 50vw;
          height: 30vh;
          padding: 10px;
          background-color: rgb(88, 24, 69);
          display:flex;
          text-align: center;
          justify-content: center;
          align-items: center;
          flex-direction: column;
          gap: 10px;
          /* Add flexbox */ /* Center text vertically */
          }
          label {
          margin-bottom: 5px;
        }
        
          .button-container {
          display: flex;
          justify-content: center;
          gap: 10px;
        }
        .register-link {
          margin-top: 10px;
        }
        .register-link a {
          display: inline-block;
          font-size: smaller;
          text-decoration: none;
        }
          .container {
          display: flex;
          flex-direction: column;
          column-gap: 10px;
          gap: 5px;
          align-items: center;
          width: 70vw;
          height: 40vw;
          background-color: rgb(178, 106, 35);
          border-radius: 10px;
        }
        input2{
            width: 10vw;
          height: 5vh;
          padding: 2px;
          border-radius: 5px;
        }
        input{
            width: 10vw;
          height: 5vh;
          padding: 2px;
          border-radius: 5px;
        }

        table{
      font-size: 25px;
        width: 40vw;
      height: 40vh;
      padding: 10px;
        font-weight: 400;
        background-color: rgb(255, 195, 0);
      background-color: rgba(144, 12, 63);
      text-align: center; /* Center text horizontally */
      display: flex; /* Add flexbox */
      border-radius: 10px;
      gap: 10px;
    }
    tr{
      width: 40px;
      border: 2px;
      height: inherit;
    }
    td{
      width: 10px;
      height: 5px;
      border: 2px;
    }
            </style>
 
</head>
<body>
  
  <h1><%= student.name %>'s Grades</h1>
  <table id="gradesTable">
    <tr>
      <% const Subject = distinctSubject %>
      <td><%= Subject %></td>
    </tr>
    <% kid.forEach(kidItem => { %>
      <tr>
        <td><%= kidItem.grade %></td>
        <td><%= kidItem.mark %></td>
        <td><%= kidItem.testNo %></td>
        <% const test = kidItem._id %>
        <td><button class="remove-subject-btn delete-button"  data-test="<%= test %>" data-subject = "<%= Subject %>"><i class="fas fa-trash-alt delete-button" data-test="<%= test %>"  data-subject = "<%= Subject %>"></i></button></td>
        <td><button class="remove-subject-btn"><a href="/updateGrades/<%= kidItem._id %>/<%= student.name%>">Update</a></button></td>
      </tr>
    <% }); %>
  </table>
  <button><a href="/myStudents">BACK</a></button>
  
  <div id="popupOverlay" class="popup-overlay" data-test="" data-kid="" data-subject="">
    <div class="popup-content">
      <button type="button" class="remove-subject-btn" onclick="hidePasswordPopup()"><i class="fas fa-times"></i></button>
      <h2>Enter Password</h2>
      <input type="password" id="lockpassword" placeholder="Enter Teacher Lock">
      <button onclick="deleteItem()">Submit</button>
    </div>
  </div>
</body>
 <script> 
  window.onload = hidePasswordPopup();
    function validatePassword() {
      const passwordInput = document.getElementById('lockpassword');
      const lockpassword = passwordInput.value;
      if (lockpassword === '76376835') {
        hidePasswordPopup();
        return true;
        
      } else {
        alert('Wrong password! Please try again.');
      }
    }
    // Function to hide the password popup
    function hidePasswordPopup() {
      const overlay = document.getElementById('popupOverlay');
      overlay.style.display = 'none';
      
    }

    document.getElementById('gradesTable').addEventListener('click', function(event) {
      if (event.target.classList.contains('delete-button')) {
        event.preventDefault();
      const button = event.target;
      const overlay = document.getElementById('popupOverlay');
      overlay.style.display = 'flex'
      overlay.dataset.test = button.getAttribute('data-test');
      overlay.dataset.kid = '<%= student.name %>';
      overlay.dataset.subject = button.getAttribute('data-subject')
      console.log('test:',overlay.dataset.test);
  console.log('kid:',overlay.dataset.kid);
  console.log('subject:', overlay.dataset.subject);
    }});

    // Function to validate the password
    

    function deleteItem() {
  const overlay = document.getElementById('popupOverlay');
  const test = overlay.dataset.test;
  const kid = overlay.dataset.kid;
  const subject = overlay.dataset.subject;
  var isValidPassword = false;
  isValidPassword = validatePassword();
  console.log('test:', test);
  console.log('kid:', kid);
  console.log('subject:', subject);
  if (isValidPassword) {
    // Perform the delete action
    const params = new URLSearchParams();
    params.append('test', test);
    params.append('kid', kid);
    params.append('subject', subject);

    fetch('/adjustGrades', {
      method: 'POST',
      body: params,
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded'
      }
    })
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok.');
        }
        // Handle the response if needed
      })
      .catch(error => {
        alert(error);
        // Handle the error
      });

    overlay.dataset.test = '';
    overlay.dataset.kid = '';
    overlay.dataset.subject = '';
  }
}



   
  </script>